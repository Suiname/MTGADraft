{"version":3,"sources":["../node_modules/encoding/lib sync","components/Card.jsx","components/CheckboxFilter.jsx","components/DropdownFilter.jsx","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Card","active","index","onClick","selected","addToCube","removeFromList","Cards","className","src","image_uris","en","alt","name","includes","CheckboxFilter","filterState","hook","checkboxChange","style","Object","map","filterName","key","type","checked","onChange","sets","DropdownFilter","value","set","debugCards","require","debugging","process","REACT_APP_DEBUGGING","App","useState","chosen","setChosen","setSelected","collection","setCollection","setCards","page","setPage","nameFilter","setNameFilter","W","U","B","R","G","colorFilter","setColorFilter","common","uncommon","rare","mythic","rarityFilter","setRarityFilter","setFilter","setSetFilter","loading","setLoading","useEffect","session","location","window","URLSearchParams","search","get","a","fetch","json","then","res","l","fetchData","fetchCards","filtered","filter","selection","xport","exportSet","cardList","data","Blob","fileURL","URL","createObjectURL","tempLink","document","createElement","href","setAttribute","click","state","target","collectionArray","filteredArray","toLowerCase","values","matches","color_identity","forEach","color","rarity","pages","Math","ceil","length","paginatedCollection","array","pageSize","slice","paginate","pageLoading","htmlFor","preventDefault","filterChange","marginLeft","marginRight","disabled","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"2IAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,88mLCOVC,G,YAZF,SAAC,GAA0E,IAAzEC,EAAwE,EAAxEA,OAAQC,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,QAASC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,MAC3E,OACE,yBAAKJ,QAASA,EAASJ,GAAIG,EAAOM,UAAWP,EAAS,cAAgB,QACvE,yBAAKQ,IAAKF,EAAML,GAAOQ,WAAWC,GAAIC,IAAKL,EAAML,GAAOW,OACxD,yBAAKL,UAAWP,EAAS,cAAgB,SACrCG,EAASU,SAASZ,IAAU,4BAAQC,QAASE,GAAjB,eAC7BD,EAASU,SAASZ,IAAU,4BAAQC,QAAS,kBAAMG,EAAeJ,KAAtC,wBCMlBa,EAbQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,eAAgBC,EAAtC,EAAsCA,MAAtC,OACtBC,OAAOzB,KAAKqB,GAAaK,KAAI,SAACC,GAAD,OAC5B,2BAAOC,IAAKD,GACXA,EACA,2BACAH,MAAOA,EACPN,KAAMS,EACNE,KAAK,WACLC,QAAST,EAAYM,GACrBI,SAAU,SAAClC,GAAD,OAAO0B,EAAe1B,EAAGwB,EAAaC,WCT7CU,EAAO,CACZ,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAccC,EAXQ,SAAC,GAAD,IAAGN,EAAH,EAAGA,WAAYH,EAAf,EAAeA,MAAOU,EAAtB,EAAsBA,MAAOH,EAA7B,EAA6BA,SAA7B,OACrB,2BAAOH,IAAKD,GACVA,EACD,4BAAQvB,GAAG,kBAAkBoB,MAAOA,EAAOU,MAAOA,EAAOH,SAAUA,GAEjEC,EAAKN,KAAI,SAACS,GAAD,OAAS,4BAAQD,MAAOC,GAAMA,SCzEtCC,GADkBC,EAAQ,KACbA,EAAQ,MACrBC,EAAgD,SAApCC,wHAAYC,oBA8OfC,MAnOf,WAEE,IAFa,EAkBeC,qBAlBf,mBAkBNC,EAlBM,KAkBEC,EAlBF,OAmBmBF,mBAAS,IAnB5B,mBAmBNjC,EAnBM,KAmBIoC,EAnBJ,OAoBuBH,mBAAS,IApBhC,mBAoBNI,EApBM,KAoBMC,EApBN,OAqBaL,mBAAS,IArBtB,mBAqBN9B,EArBM,KAqBCoC,EArBD,OAsBWN,mBAAS,GAtBpB,mBAsBNO,EAtBM,KAsBAC,EAtBA,OAuBuBR,mBAAS,IAvBhC,mBAuBNS,EAvBM,KAuBMC,EAvBN,OAwByBV,mBAtBT,CAC3BW,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,IAPQ,mBAwBNC,EAxBM,KAwBOC,EAxBP,OAyB2BjB,mBAfV,CAC5BkB,QAAQ,EACRC,UAAU,EACVC,MAAM,EACNC,QAAQ,IAdG,mBAyBNC,EAzBM,KAyBQC,EAzBR,OA0BqBvB,mBAAS,QA1B9B,mBA0BNwB,EA1BM,KA0BKC,EA1BL,OA2BiBzB,mBAAS,CAAC9B,OAAO,EAAMkC,YAAY,IA3BpD,mBA2BNsB,EA3BM,KA2BGC,EA3BH,KA8BbC,qBAAU,WAID,CAAC,IACEC,GA3CKC,EA2CiBC,OAAOD,SAzClC,CACLD,QAFmB,IAAIG,gBAAgBF,EAASG,QAE1BC,IAAI,YAAc,KAwC9BL,QADH,4CAEL,sBAAAM,EAAA,sEACoBC,MAAM,mBAAD,OAAoBP,IAD7C,cAGGQ,OACAC,MAAK,SAAAC,GACJlC,EAAckC,GACdZ,GAAW,SAACa,GAAD,sBAAYA,EAAZ,CAAepC,YAAY,UAN1C,4CAFK,0DAWLqC,GArDY,IAACX,IAuDd,IAEHF,qBAAU,WACR,GAAIhC,EACFU,EAASZ,GACTiC,EAAW,CAACzD,OAAO,QACd,6CACL,sBAAAiE,EAAA,sEACoBC,MAAM,kBAD1B,cAGGC,OACAC,MAAK,SAAAC,GACJjC,EAASiC,GACTZ,GAAW,SAACa,GAAD,sBAAYA,EAAZ,CAAetE,OAAO,UANrC,4CADK,uBAAC,WAAD,wBAULwE,MAED,IAKH,IAAMzE,EAAiB,SAACP,GACtB,IAAMiF,EAAW5E,EAAS6E,QAAO,SAAAC,GAAS,OAAInF,IAAOmF,KACrD1C,EAAYwC,IAER3E,GAAY,kBAAOD,EAASU,SAASwB,IAAWE,EAAY,GAAD,mBAAKpC,GAAL,CAAekC,MAC1E6C,GAAQ,SAACC,GACb,IAAIC,EAEFA,EADED,EACSA,EAAU/D,KAAI,SAACtB,GAAD,OAAQQ,EAAMR,GAAIc,KAAO,QAEvCT,EAASiB,KAAI,SAACtB,GAAD,OAAQQ,EAAMR,GAAIc,KAAO,QAEnD,IAAMyE,EAAO,IAAIC,KAAKF,EAAU,CAAC7D,KAAM,SACjCgE,EAAUpB,OAAOqB,IAAIC,gBAAgBJ,GACrCK,EAAWC,SAASC,cAAc,KACxCF,EAASG,KAAON,EAChBG,EAASI,aAAa,WAAY,mBAClCJ,EAASK,SAiBL9E,GAAiB,SAAC1B,EAAGyG,EAAOhF,GAChC,IAAMJ,EAAOrB,EAAE0G,OAAOrF,KAChBY,EAAUjC,EAAE0G,OAAOzE,QACzBR,EAAK,eAAKgF,EAAN,eAAcpF,EAAOY,KAEzBoB,EAAQ,IAqBJsD,GAAkB/E,OAAOzB,KAAK8C,GAC9B2D,GAAgBD,GACnBlB,QAjBkB,SAAClF,GAAD,MAAuB,KAAf+C,GAAqBvC,EAAMR,GAAIc,KAAKwF,cAAcvF,SAASgC,EAAWuD,kBAkBhGpB,QAjBmB,SAAClF,GACrB,IAAKqB,OAAOkF,OAAOjD,GAAavC,UAAS,GACvC,OAAO,EAET,IAAIyF,GAAU,EAId,OAHAhG,EAAMR,GAAIyG,eAAeC,SAAQ,SAACC,GAChCH,EAAUA,GAAWlD,EAAYqD,MAE5BH,KAUNtB,QARoB,SAAClF,GAAD,OAASqB,OAAOkF,OAAO3C,GAAc7C,UAAS,IAAU6C,EAAapD,EAAMR,GAAI4G,WASnG1B,QARiB,SAAClF,GAAD,MAAuB,SAAd8D,GAAwBtD,EAAMR,GAAI+B,MAAQ+B,KAUjE+C,GAAQC,KAAKC,KAAKV,GAAcW,OADrB,IAEXC,GA3CW,SAACC,EAAOrE,EAAMsE,GAC7B,OAAOD,EAAME,OAAOvE,EAAO,GAAKsE,EAAUtE,EAAOsE,GA0CvBE,CAAShB,GAAexD,EAFnC,IAGXyE,GAActD,EAAQxD,OAASwD,EAAQtB,WAC7C,OACE,yBAAKjC,UAAU,QAEV6G,IACD,kBAAC,WAAD,KACA,yBAAKtH,GAAG,uBACR,+DAAqCqG,GAAcW,OAAnD,IAA4DX,GAAcW,OAASZ,GAAgBY,QAAU,cAC7G,6BACE,2BAAOO,QAAQ,cAAf,iBAEE,2BAAOvH,GAAG,aAAac,KAAK,aAAaW,KAAK,OAAOK,MAAOiB,EAAYpB,SAAU,SAAClC,GAAD,OApDvE,SAACA,EAAGyB,GACvBzB,EAAE+H,iBACFtG,EAAKzB,EAAE0G,OAAOrE,OAEdgB,EAAQ,GAgDyF2E,CAAahI,EAAGuD,OAE3G,oDAEE,kBAAC,EAAD,CACE/B,YAAaqC,EACbpC,KAAMqC,EACNpC,eAAgBA,GAChBC,MAAO,CAACsG,WAAW,EAAGC,YAAa,KAGvC,qDAEE,kBAAC,EAAD,CACE1G,YAAa2C,EACb1C,KAAM2C,EACN1C,eAAgBA,GAChBC,MAAO,CAACsG,WAAW,EAAGC,YAAa,MAGvC,kBAAC,EAAD,CACApG,WAAW,eACXO,MAAOgC,EACPnC,SA9Da,SAAClC,GACpBsE,EAAatE,EAAE0G,OAAOrE,OACtBgB,EAAQ,OA+DA+D,GAAQ,GACR,kBAAC,WAAD,KACE,4BAAQ7G,GAAG,WAAW4H,SAAoB,IAAT/E,EAAazC,QAtFzC,WACf0C,EAAQD,EAAO,KAqFL,aACA,4BAAQ+E,SAAW/E,IAASgE,GAAQzG,QA1F/B,WACf0C,EAAQD,EAAO,IAyFiD7C,GAAG,YAAzD,eAIR,yBAAKA,GAAG,iBAEJiH,GAAoB3F,KAAI,SAACE,GAAD,OACtB,kBAAC,EAAD,CACEhB,MAAOA,EACPN,OAAQsB,IAAQe,EAChBpC,MAAOqB,EACPpB,QAAS,kBAAMoC,EAAUhB,IACzBA,IAAKA,EACLnB,SAAUA,EACVC,UAAWA,GACXC,eAAgBA,QAIxB,yBAAKP,GAAG,qBACN,4BAAQI,QAAS,kBAAMgF,OAAvB,eACA,4BAAQhF,QAAS,kBAAMgF,GAAMgB,MAA7B,cACA,4BAAQhG,QAAS,kBAAMgF,GAAMiB,MAA7B,oBAEF,yBAAKrG,GAAG,iBAAgB,6CAAmBK,EAAS2G,SACpD,yBAAKhH,GAAG,sBAAuB6G,GAAQ,GAAK,uCAAahE,EAAb,OAAuBgE,KACnE,yBAAK7G,GAAG,uBAAsB,+CAC9B,yBAAKA,GAAG,iBAGJK,GAAYA,EAASiB,KAAI,SAACtB,GAAD,OACzB,yBAAKS,UAAU,WAAWe,IAAKxB,GAC7B,8BAAOQ,EAAMR,GAAIc,MACjB,4BAAQV,QAAS,kBAAMG,EAAeP,KAAtC,gBAQJsH,IACA,yBAAKtH,GAAG,UAAR,WAAyB,yBAAKS,UAAU,cAAa,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,kCCnOtHoH,QACW,cAA7BxD,OAAOD,SAAS0D,UAEe,UAA7BzD,OAAOD,SAAS0D,UAEhBzD,OAAOD,SAAS0D,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrC,SAASsC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1D,MAAK,SAAA2D,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.a9fc5c5f.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 121;","\nimport React from 'react';\n\nconst Card = ({active, index, onClick, selected, addToCube, removeFromList, Cards}) => {\n\treturn (\n\t  <div onClick={onClick} id={index} className={active ? \"card active\" : \"card\"}>\n\t\t<img src={Cards[index].image_uris.en} alt={Cards[index].name}/>\n\t\t<div className={active ? \"menu active\" : \"menu\"}>\n\t\t  {!selected.includes(index) && <button onClick={addToCube}>Add to Cube</button>}\n\t\t  {selected.includes(index) && <button onClick={() => removeFromList(index)}>Remove from Cube</button>}\n\t\t</div>\n\t  </div>\n\t);\n};\n\nexport default Card;\n","import React from 'react';\n\nconst CheckboxFilter = ({ filterState, hook, checkboxChange, style }) => \n\tObject.keys(filterState).map((filterName) => \n\t\t<label key={filterName}>\n\t\t{filterName}\n\t\t\t<input\n\t\t\tstyle={style}\n\t\t\tname={filterName}\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={filterState[filterName]}\n\t\t\tonChange={(e) => checkboxChange(e, filterState, hook)} />\n\t\t</label>\n\t);\n\nexport default CheckboxFilter;","import React from 'react';\n\nconst sets = [\n\t'none',\n\t'mir',\n\t'wth',\n\t'mmq',\n\t'inv',\n\t'pls',\n\t'ody',\n\t'ons',\n\t'scg',\n\t'8ed',\n\t'mrd',\n\t'dst',\n\t'5dn',\n\t'sok',\n\t'9ed',\n\t'rav',\n\t'dis',\n\t'10e',\n\t'lrw',\n\t'mor',\n\t'shm',\n\t'me2',\n\t'ala',\n\t'arb',\n\t'm10',\n\t'zen',\n\t'wwk',\n\t'roe',\n\t'm11',\n\t'ddf',\n\t'som',\n\t'me4',\n\t'cmd',\n\t'isd',\n\t'avr',\n\t'chk',\n\t'con',\n\t'dka',\n\t'm13',\n\t'nph',\n\t'rtr',\n\t'gtc',\n\t'm14',\n\t'ths',\n\t'jou',\n\t'c13',\n\t'mma',\n\t'm15',\n\t'vma',\n\t'dtk',\n\t'ori',\n\t'bfz',\n\t'soi',\n\t'emn',\n\t'akh',\n\t'xln',\n\t'rix',\n\t'dom',\n\t'm19',\n\t'g18',\n\t'grn',\n\t'ana',\n\t'rna',\n\t'war',\n\t'm20',\n\t'eld',\n\t'thb',\n\t'mh1',\n\t'und'\n];\n\nconst DropdownFilter = ({ filterName, style, value, onChange }) => (\n\t\t<label key={filterName}>\n\t\t\t{filterName}\n\t\t\t<select id=\"setFilterSelect\" style={style} value={value} onChange={onChange}>\n\t\t\t\t{\n\t\t\t\t\tsets.map((set) => <option value={set}>{set}</option>)\n\t\t\t\t}\n\t\t\t</select>\n\t\t</label>\n\t);\n\nexport default DropdownFilter;","import React, { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport 'fetch';\nimport { Card, CheckboxFilter, DropdownFilter } from './components';\n\nconst debugCollection = require('./devData/collection.json');\nconst debugCards = require('./devData/debugCards.json');\nconst debugging = process.env.REACT_APP_DEBUGGING === 'true';\nconst notProduction = process.env.NODE_ENV !== 'production';\n\nconst getParams = (location) => {\n  const searchParams = new URLSearchParams(location.search);\n  return {\n    session: searchParams.get('session') || '',\n  };\n}\n\n\nfunction App() {\n  // Initial states\n  const initColorFilterState = {\n    W: true,\n    U: true,\n    B: true,\n    R: true,\n    G: true,\n  };\n\n  const initRarityFilterState = {\n    common: true,\n    uncommon: true,\n    rare: true,\n    mythic: true,\n  };\n\n  // Hook definitions\n  const [chosen, setChosen] = useState();\n  const [selected, setSelected] = useState([]);\n  const [collection, setCollection] = useState({});\n  const [Cards, setCards] = useState({});\n  const [page, setPage] = useState(1);\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [colorFilter, setColorFilter] = useState(initColorFilterState);\n  const [rarityFilter, setRarityFilter] = useState(initRarityFilterState);\n  const [setFilter, setSetFilter] = useState('none');\n  const [loading, setLoading] = useState({Cards: true, collection: true});\n\n  // Effect Hooks\n  useEffect(() => {\n    if (notProduction && debugging) {\n      setCollection(debugCollection);\n      setLoading({collection: false});\n    } else {\n      const { session } = getParams(window.location);\n      async function fetchData() {\n        const res = await fetch(`/api/collection/${session}`);\n        res\n        .json()\n        .then(res => {\n          setCollection(res);\n          setLoading((l) => ({...l, collection: false}));\n        });\n      }\n      fetchData();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (debugging) {\n      setCards(debugCards);\n      setLoading({Cards: false});\n    } else {\n      async function fetchCards() {\n        const res = await fetch('/api/cards/all');\n        res\n        .json()\n        .then(res => {\n          setCards(res);\n          setLoading((l) => ({...l, Cards: false}));\n        });\n      }\n      fetchCards();\n    }\n  }, []);\n\n  \n \n  // Component Utility functions\n  const removeFromList = (id) => {\n    const filtered = selected.filter(selection => id !== selection);\n    setSelected(filtered);\n  };\n  const addToCube = () => !selected.includes(chosen) && setSelected([...selected, chosen]);\n  const xport = (exportSet) => {\n    let cardList;\n    if (exportSet) {\n      cardList = exportSet.map((id) => Cards[id].name + '\\n');\n    } else {\n      cardList = selected.map((id) => Cards[id].name + '\\n');\n    }\n    const data = new Blob(cardList, {type: 'text'});\n    const fileURL = window.URL.createObjectURL(data);\n    const tempLink = document.createElement('a');\n    tempLink.href = fileURL;\n    tempLink.setAttribute('download', 'cube_export.txt');\n    tempLink.click();\n  };\n  const nextPage = () => {\n    setPage(page + 1);\n  };\n  const prevPage = () => {\n    setPage(page - 1);\n  };\n  const paginate = (array, page, pageSize) => {\n    return array.slice((page - 1) * pageSize, page * pageSize);\n  };\n  const filterChange = (e, hook) => {\n    e.preventDefault();\n    hook(e.target.value);\n    // Reset Page to 1\n    setPage(1);\n  }\n  const checkboxChange = (e, state, hook) => {\n    const name = e.target.name;\n    const checked = e.target.checked;\n    hook({ ...state, [name]: checked });\n    // Reset Page to 1\n    setPage(1);\n  }\n  const selectChange = (e) => {\n    setSetFilter(e.target.value);\n    setPage(1);\n  };\n  const filterByName = (id) => nameFilter === \"\" || Cards[id].name.toLowerCase().includes(nameFilter.toLowerCase());\n  const filterByColor = (id) => {\n    if (!Object.values(colorFilter).includes(false) ) {\n      return true;\n    }\n    let matches = true;\n    Cards[id].color_identity.forEach((color) => {\n      matches = matches && colorFilter[color];\n    });\n    return matches;\n  }\n  const filterByRarity = (id) => !Object.values(rarityFilter).includes(false) || rarityFilter[Cards[id].rarity];\n  const filterBySet = (id) => (setFilter === 'none' || Cards[id].set === setFilter);\n\n  // Objects for use in component\n  const collectionArray = Object.keys(collection);\n  const filteredArray = collectionArray\n    .filter(filterByName)\n    .filter(filterByColor)\n    .filter(filterByRarity)\n    .filter(filterBySet);\n  const pageSize = 25;\n  const pages = Math.ceil(filteredArray.length / pageSize);\n  const paginatedCollection = paginate(filteredArray, page, pageSize);\n  const pageLoading = loading.Cards || loading.collection;\n  return (\n    <div className=\"App\">\n      {\n        !pageLoading &&\n        <Fragment>\n        <div id=\"cardContainerHeader\">\n        <h5>Group collection - Total Cards: {filteredArray.length} {filteredArray.length < collectionArray.length && '(Filtered)'}</h5>\n        <div>\n          <label htmlFor=\"nameFilter\">\n            Filter by Name\n            <input id=\"nameFilter\" name=\"nameFilter\" type=\"text\" value={nameFilter} onChange={(e) => filterChange(e, setNameFilter)}></input>\n          </label>\n          <span> Filter by Color: </span>\n          {\n            <CheckboxFilter \n              filterState={colorFilter}\n              hook={setColorFilter}\n              checkboxChange={checkboxChange}\n              style={{marginLeft:2, marginRight: 5}}\n              />\n          }\n          <span> Filter by Rarity: </span>\n          {\n            <CheckboxFilter \n              filterState={rarityFilter}\n              hook={setRarityFilter}\n              checkboxChange={checkboxChange}\n              style={{marginLeft:2, marginRight: 10}}\n              />\n          }\n          <DropdownFilter \n          filterName=\"Set Filter: \"\n          value={setFilter}\n          onChange={selectChange} />\n        </div>\n          {\n            pages > 1 &&\n            <Fragment>\n              <button id=\"prevPage\" disabled={ page === 1 } onClick={prevPage} >Prev Page</button>\n              <button disabled={ page === pages } onClick={nextPage}id=\"nextPage\">Next Page</button>\n            </Fragment>\n          }\n      </div>\n      <div id=\"cardContainer\">\n        {\n          paginatedCollection.map((key) => \n            <Card \n              Cards={Cards}\n              active={key === chosen}\n              index={key}\n              onClick={() => setChosen(key)}\n              key={key}\n              selected={selected}\n              addToCube={addToCube}\n              removeFromList={removeFromList}/>\n          )\n        }\n      </div>\n      <div id=\"selectorContainer\">\n        <button onClick={() => xport()}>Export Cube</button>\n        <button onClick={() => xport(collectionArray)}>Export All</button>\n        <button onClick={() => xport(filteredArray)}>Export Filtered</button>\n      </div>\n      <div id=\"statContainer\"><span>Card Count: {selected.length}</span></div>\n      <div id=\"pageCountContainer\">{ pages > 1 && <span>Page: {page} of {pages}</span> }</div>\n      <div id=\"listContainerHeader\"><h3>Cube Card List</h3></div>\n      <div id=\"listContainer\">\n      \n        {\n          selected && selected.map((id) => \n          <div className=\"listItem\" key={id}>\n            <span>{Cards[id].name}</span>\n            <button onClick={() => removeFromList(id)}>Remove</button>\n          </div>\n          )\n        }\n      </div>\n      </Fragment>\n      }\n      {\n        pageLoading &&\n        <div id=\"loader\">Loading <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}