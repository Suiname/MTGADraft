{"version":3,"sources":["../node_modules/encoding/lib sync","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","debugCollection","require","Cards","debugging","process","REACT_APP_DEBUGGING","Card","active","index","onClick","selected","addToCube","removeFromList","className","src","image_uris","en","alt","name","includes","App","useState","chosen","setChosen","setSelected","collection","setCollection","page","setPage","nameFilter","setNameFilter","W","U","B","R","G","colorFilter","setColorFilter","common","uncommon","rare","mythic","rarityFilter","setRarityFilter","useEffect","session","location","window","URLSearchParams","search","get","a","fetch","json","then","res","fetchData","filtered","filter","selection","checkboxChange","state","hook","target","checked","collectionArray","Object","filteredArray","toLowerCase","matches","color_identity","forEach","color","rarity","pages","Math","ceil","length","paginatedCollection","array","pageSize","slice","paginate","htmlFor","type","value","onChange","preventDefault","filterChange","map","style","marginLeft","marginRight","disabled","key","cardList","data","Blob","fileURL","URL","createObjectURL","tempLink","document","createElement","href","setAttribute","click","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.71376e7d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 121;","import React, { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport 'fetch';\n\nconst debugCollection = require('./devData/collection.json');\nconst Cards = require('./devData/MTGACards.json');\nconst debugging = process.env.REACT_APP_DEBUGGING === 'true';\n\nconst getParams = (location) => {\n  const searchParams = new URLSearchParams(location.search);\n  return {\n    session: searchParams.get('session') || '',\n  };\n}\n\nconst Card = ({active, index, onClick, selected, addToCube, removeFromList}) => {\n  return (\n    <div onClick={onClick} id={index} className={active ? \"card active\" : \"card\"}>\n      <img src={Cards[index].image_uris.en} alt={Cards[index].name}/>\n      <div className={active ? \"menu active\" : \"menu\"}>\n        {!selected.includes(index) && <button onClick={addToCube}>Add to Cube</button>}\n        {selected.includes(index) && <button onClick={() => removeFromList(index)}>Remove from Cube</button>}\n      </div>\n    </div>\n  );\n};\n\n\nfunction App() {\n\n  // Hook definitions\n  const [chosen, setChosen] = useState();\n  const [selected, setSelected] = useState([]);\n  const [collection, setCollection] = useState({});\n  const [page, setPage] = useState(1);\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [colorFilter, setColorFilter] = useState({\n    W: true,\n    U: true,\n    B: true,\n    R: true,\n    G: true,\n  });\n  const [rarityFilter, setRarityFilter] = useState({\n    common: true,\n    uncommon: true,\n    rare: true,\n    mythic: true,\n  });\n\n  // Effect Hooks\n  useEffect(() => {\n    if (debugging) {\n      setCollection(debugCollection);\n    } else {\n      const { session } = getParams(window.location);\n      async function fetchData() {\n        const res = await fetch(`/api/collection/${session}`);\n        res\n        .json()\n        .then(res => setCollection(res));\n      }\n      fetchData();\n    }\n  }, []);\n \n  // Component Utility functions\n  const removeFromList = (id) => {\n    const filtered = selected.filter(selection => id !== selection);\n    setSelected(filtered);\n  };\n  const addToCube = () => !selected.includes(chosen) && setSelected([...selected, chosen]);\n  const xport = () => {\n    const cardList = selected.map((id) => Cards[id].name + '\\n');\n    const data = new Blob(cardList, {type: 'text'});\n    const fileURL = window.URL.createObjectURL(data);\n    const tempLink = document.createElement('a');\n    tempLink.href = fileURL;\n    tempLink.setAttribute('download', 'cube_export.txt');\n    tempLink.click();\n  };\n  const nextPage = () => {\n    setPage(page + 1);\n  };\n  const prevPage = () => {\n    setPage(page - 1);\n  };\n  const paginate = (array, page, pageSize) => {\n    return array.slice((page - 1) * pageSize, page * pageSize);\n  };\n  const filterChange = (e, hook) => {\n    e.preventDefault();\n    hook(e.target.value);\n  }\n  const checkboxChange = (e, state, hook) => {\n    const name = e.target.name;\n    const checked = e.target.checked;\n    hook({ ...state, [name]: checked });\n  }\n  const filterByName = (id) => {\n    return Cards[id].name.toLowerCase().includes(nameFilter.toLowerCase());\n  };\n  const filterByColor = (id) => {\n    let matches = true;\n    Cards[id].color_identity.forEach((color) => {\n      matches = matches && colorFilter[color];\n    });\n    return matches;\n  }\n  const filterByRarity = (id) => {\n    return rarityFilter[Cards[id].rarity];\n  }\n\n  // Objects for use in component\n  const collectionArray = Object.keys(collection);\n  const filteredArray = collectionArray\n    .filter(filterByName)\n    .filter(filterByColor)\n    .filter(filterByRarity);\n  const pageSize = 25;\n  const pages = Math.ceil(filteredArray.length / pageSize);\n  const paginatedCollection = paginate(filteredArray, page, pageSize);\n\n  return (\n    <div className=\"App\">\n      <div id=\"cardContainerHeader\">\n        <h5>Group collection - Total Cards: {filteredArray.length} {filteredArray.length < collectionArray.length && '(Filtered)'}</h5>\n        <div>\n          <label htmlFor=\"nameFilter\">\n            Filter by Name\n            <input id=\"nameFilter\" name=\"nameFilter\" type=\"text\" value={nameFilter} onChange={(e) => filterChange(e, setNameFilter)}></input>\n          </label>\n          <span> Filter by Color: </span>\n          {\n            Object.keys(colorFilter).map((color) => \n              <label>\n              {color}\n              <input\n                style={{marginLeft:2, marginRight: 5}}\n                name={color}\n                type=\"checkbox\"\n                checked={colorFilter[color]}\n                onChange={(e) => checkboxChange(e, colorFilter, setColorFilter)} />\n              </label>)\n          }\n          <span> Filter by Rarity: </span>\n          {\n            Object.keys(rarityFilter).map((rarity) => \n              <label>\n              {rarity}\n              <input\n                style={{marginLeft:2, marginRight: 10}}\n                name={rarity}\n                type=\"checkbox\"\n                checked={rarityFilter[rarity]}\n                onChange={(e) => checkboxChange(e, rarityFilter, setRarityFilter)} />\n              </label>)\n          }\n        </div>\n          {\n            pages > 1 &&\n            <Fragment>\n              <button id=\"prevPage\" disabled={ page === 1 } onClick={prevPage} >Prev Page</button>\n              <button disabled={ page === pages } onClick={nextPage}id=\"nextPage\">Next Page</button>\n            </Fragment>\n          }\n      </div>\n      <div id=\"cardContainer\">\n        {\n          paginatedCollection.map((key) => \n            <Card \n              active={key === chosen}\n              index={key}\n              onClick={() => setChosen(key)}\n              key={key}\n              selected={selected}\n              addToCube={addToCube}\n              removeFromList={removeFromList}/>\n          )\n        }\n      </div>\n      <div id=\"selectorContainer\">\n        <button onClick={xport}>Export Cube</button>\n      </div>\n      <div id=\"statContainer\"><span>Card Count: {selected.length}</span></div>\n      <div id=\"pageCountContainer\">{ pages > 1 && <span>Page: {page} of {pages}</span> }</div>\n      <div id=\"listContainerHeader\"><h3>Cube Card List</h3></div>\n      <div id=\"listContainer\">\n      \n        {\n          selected && selected.map((id) => \n          <div className=\"listItem\" key={id}>\n            <span>{Cards[id].name}</span>\n            <button onClick={() => removeFromList(id)}>Remove</button>\n          </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}